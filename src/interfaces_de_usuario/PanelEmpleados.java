/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaces_de_usuario;

import clases_modelo.Cdt;
import clases_modelo.Clientes;
import clases_modelo.Creditos;
import clases_modelo.Cuentas;
import clases_modelo.TarjetaDeCredito;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;


/**
 *
 * @author user
 */
public class PanelEmpleados extends javax.swing.JFrame {

    /**
     * Creates new form PanelEmpleados
     */
    public PanelEmpleados() {
        initComponents();
        this.setLocationRelativeTo(null);
        llenarComboClientesPendientes();
        llenarComboClientesActivos();
        cbxClientesActivos.setSelectedIndex(-1);
        cbxClientesPendientes.setSelectedIndex(-1);
        txaClientesPendientes.setText("");
    }
    Clientes clientePendienteSeleccionado;
    int indiceClientePendienteSeleccionado;
    int idClientePendienteSeleccionado;
    Clientes clienteActivoSeleccionado;
    int indiceClienteActivoSeleccionado;
    int idClienteActivoSeleccionado;
    ArrayList<Integer> indicesClientesPendientes = new ArrayList();
    ArrayList<Integer> indicesClientesActivos = new ArrayList();
    ArrayList<Integer> indicesProductosPendientesClienteActivo = new ArrayList();
    DefaultComboBoxModel mdlClientesPendientes = new DefaultComboBoxModel();
    DefaultComboBoxModel mdlClientesActivos = new DefaultComboBoxModel();
    DefaultComboBoxModel mdlProductosPendientesClientesActivos = new DefaultComboBoxModel();
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new interfaces_de_usuario.PlantillaInterfacesGrandes();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaClientesPendientes = new javax.swing.JTextArea();
        btnAprobarClientesPendientes = new javax.swing.JButton();
        cbxClientesPendientes = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnRechazarClientesPendientes = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txaClientesActivos = new javax.swing.JTextArea();
        btnAprobarClientesActivos = new javax.swing.JButton();
        cbxClientesActivos = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        btnRechazarClientesActivos = new javax.swing.JButton();
        cbxProductosPendientesClientesActivos = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setForeground(new java.awt.Color(0, 0, 0));
        jTabbedPane1.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N

        jScrollPane1.setForeground(new java.awt.Color(0, 0, 0));

        txaClientesPendientes.setColumns(20);
        txaClientesPendientes.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        txaClientesPendientes.setRows(5);
        jScrollPane1.setViewportView(txaClientesPendientes);

        btnAprobarClientesPendientes.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        btnAprobarClientesPendientes.setForeground(new java.awt.Color(0, 0, 0));
        btnAprobarClientesPendientes.setText("Aprobar");
        btnAprobarClientesPendientes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAprobarClientesPendientes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAprobarClientesPendientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAprobarClientesPendientesActionPerformed(evt);
            }
        });

        cbxClientesPendientes.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        cbxClientesPendientes.setForeground(new java.awt.Color(0, 0, 0));
        cbxClientesPendientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxClientesPendientes.setSelectedIndex(-1);
        cbxClientesPendientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxClientesPendientesActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Cuentas pendientes por aprobar");

        btnRechazarClientesPendientes.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        btnRechazarClientesPendientes.setForeground(new java.awt.Color(0, 0, 0));
        btnRechazarClientesPendientes.setText("Rechazar");
        btnRechazarClientesPendientes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRechazarClientesPendientes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRechazarClientesPendientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRechazarClientesPendientesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(cbxClientesPendientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(389, 389, 389))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnAprobarClientesPendientes)
                                .addGap(107, 107, 107)
                                .addComponent(btnRechazarClientesPendientes)))))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(8, 8, 8)
                .addComponent(cbxClientesPendientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAprobarClientesPendientes)
                    .addComponent(btnRechazarClientesPendientes))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Nuevos clientes", jPanel2);

        jScrollPane3.setForeground(new java.awt.Color(0, 0, 0));

        txaClientesActivos.setColumns(20);
        txaClientesActivos.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        txaClientesActivos.setRows(5);
        jScrollPane3.setViewportView(txaClientesActivos);

        btnAprobarClientesActivos.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        btnAprobarClientesActivos.setForeground(new java.awt.Color(0, 0, 0));
        btnAprobarClientesActivos.setText("Aprobar");
        btnAprobarClientesActivos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAprobarClientesActivos.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAprobarClientesActivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAprobarClientesActivosActionPerformed(evt);
            }
        });

        cbxClientesActivos.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        cbxClientesActivos.setForeground(new java.awt.Color(0, 0, 0));
        cbxClientesActivos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxClientesActivos.setSelectedIndex(-1);
        cbxClientesActivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxClientesActivosActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Clientes");

        btnRechazarClientesActivos.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        btnRechazarClientesActivos.setForeground(new java.awt.Color(0, 0, 0));
        btnRechazarClientesActivos.setText("Rechazar");
        btnRechazarClientesActivos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRechazarClientesActivos.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRechazarClientesActivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRechazarClientesActivosActionPerformed(evt);
            }
        });

        cbxProductosPendientesClientesActivos.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        cbxProductosPendientesClientesActivos.setForeground(new java.awt.Color(0, 0, 0));
        cbxProductosPendientesClientesActivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxProductosPendientesClientesActivosActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Productos pendientes");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(cbxClientesActivos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxProductosPendientesClientesActivos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(191, 191, 191))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4)
                        .addGap(156, 156, 156)
                        .addComponent(jLabel5))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(btnAprobarClientesActivos)
                                .addGap(107, 107, 107)
                                .addComponent(btnRechazarClientesActivos)))))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(8, 8, 8)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxClientesActivos, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxProductosPendientesClientesActivos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAprobarClientesActivos)
                    .addComponent(btnRechazarClientesActivos))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Productos pendientes", jPanel5);

        jLabel3.setFont(new java.awt.Font("Poppins Medium", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Cerrar sesión");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel3MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(36, 36, 36))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 587, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(131, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel3)
                .addGap(49, 49, 49)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(148, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eliminarClientePendiente() {
        BaseDeDatos.sistema.getCliente(indiceClientePendienteSeleccionado).setEstado("Inactivo");
        BaseDeDatos.buscarCuentaPendientePorID(idClientePendienteSeleccionado).setEstado("Inactivo");
    }

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        new InicioSesion().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jLabel3MouseClicked

    private void btnRechazarClientesActivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRechazarClientesActivosActionPerformed
        String estadoNuevo = "Inactivo";
        cambiarEstadoProductosPendientesClientesActivos(estadoNuevo);          
        llenarComboProductosPendientesClientesActivos();
    }//GEN-LAST:event_btnRechazarClientesActivosActionPerformed

    private void cbxClientesActivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxClientesActivosActionPerformed
        if(cbxClientesActivos.getSelectedIndex()!=-1) {
            if(!indicesClientesActivos.isEmpty()) {
                clienteActivoSeleccionado = BaseDeDatos.sistema.getCliente(indicesClientesActivos.get(cbxClientesActivos.getSelectedIndex()));
                indiceClienteActivoSeleccionado = indicesClientesActivos.get(cbxClientesActivos.getSelectedIndex());
                idClienteActivoSeleccionado = BaseDeDatos.sistema.getCliente(indiceClientePendienteSeleccionado).getID();
            }
            llenarComboProductosPendientesClientesActivos();  
        }
    }//GEN-LAST:event_cbxClientesActivosActionPerformed

    private void llenarComboProductosPendientesClientesActivos() {
        mdlProductosPendientesClientesActivos.removeAllElements();
        indicesProductosPendientesClienteActivo.clear();
        for (int i = 0; i < clienteActivoSeleccionado.cantidadDeProductos(); i++) {
            Object producto = clienteActivoSeleccionado.getProducto(i);
            if (producto instanceof Cuentas cuenta){
                if(cuenta.getEstado().equals("Pendiente")) {
                    indicesProductosPendientesClienteActivo.add(i);
                    mdlProductosPendientesClientesActivos.addElement("Cuenta"); 
                } 
            }
            else if(producto instanceof Creditos credito) {
                if(credito.getEstado().equals("Pendiente")) {
                    indicesProductosPendientesClienteActivo.add(i);
                    mdlProductosPendientesClientesActivos.addElement("Crédito");
                }
            }
                
            else if(producto instanceof TarjetaDeCredito tdc) {
                if(tdc.getEstado().equals("Pendiente")) {
                    indicesProductosPendientesClienteActivo.add(i);
                    mdlProductosPendientesClientesActivos.addElement("Tarjeta de crédito");
                }  
            }
                 
            else if(producto instanceof Cdt cdt) {
                if(cdt.getEstado().equals("Pendiente")) {
                    indicesProductosPendientesClienteActivo.add(i);
                    mdlProductosPendientesClientesActivos.addElement("CDT");
                }    
            }      
        }
        cbxProductosPendientesClientesActivos.setModel(mdlProductosPendientesClientesActivos);
        cbxProductosPendientesClientesActivos.setSelectedIndex(-1);
    }
    private void btnAprobarClientesActivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAprobarClientesActivosActionPerformed
        String estadoNuevo = "Activo";
        cambiarEstadoProductosPendientesClientesActivos(estadoNuevo);                
        llenarComboProductosPendientesClientesActivos();    
    }//GEN-LAST:event_btnAprobarClientesActivosActionPerformed

    private void cambiarEstadoProductosPendientesClientesActivos(String estadoACambiar) {
       Object producto = clienteActivoSeleccionado.getProducto(indicesProductosPendientesClienteActivo
                .get(cbxProductosPendientesClientesActivos.getSelectedIndex()));
        if (producto instanceof Cuentas cuenta)
            cuenta.setEstado(estadoACambiar);
        else if(producto instanceof Creditos credito)
            credito.setEstado(estadoACambiar);
        else if(producto instanceof TarjetaDeCredito tdc)
            tdc.setEstado(estadoACambiar);
        else if(producto instanceof Cdt cdt)
            cdt.setEstado(estadoACambiar);
    }

    private void btnRechazarClientesPendientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRechazarClientesPendientesActionPerformed
        indiceClientePendienteSeleccionado = indicesClientesPendientes.get(cbxClientesPendientes.getSelectedIndex());
        eliminarClientePendiente();
        llenarComboClientesPendientes();
        txaClientesPendientes.setText("");
    }//GEN-LAST:event_btnRechazarClientesPendientesActionPerformed

    private void cbxClientesPendientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxClientesPendientesActionPerformed
        if(cbxClientesPendientes.getSelectedIndex()!=-1) {
            llenarTextArea();
            indiceClientePendienteSeleccionado = indicesClientesPendientes.get(cbxClientesPendientes.getSelectedIndex());
            idClientePendienteSeleccionado = BaseDeDatos.sistema.getCliente(indiceClientePendienteSeleccionado).getID();
        }
    }//GEN-LAST:event_cbxClientesPendientesActionPerformed

    private void btnAprobarClientesPendientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAprobarClientesPendientesActionPerformed
        BaseDeDatos.sistema.getCliente(indiceClientePendienteSeleccionado).setEstado("Activo");
        BaseDeDatos.buscarCuentaPendientePorID(idClientePendienteSeleccionado).setEstado("Activo");
        llenarComboClientesPendientes();
        llenarComboClientesActivos();
        txaClientesPendientes.setText("");
    }//GEN-LAST:event_btnAprobarClientesPendientesActionPerformed

    private void cbxProductosPendientesClientesActivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxProductosPendientesClientesActivosActionPerformed
        txaClientesActivos.setText("");
        llenarTxaClientesActivos();
    }//GEN-LAST:event_cbxProductosPendientesClientesActivosActionPerformed

    private void llenarTxaClientesActivos() {
        if(cbxProductosPendientesClientesActivos.getSelectedIndex()!=-1) {
            Object producto = clienteActivoSeleccionado.getProducto(indicesProductosPendientesClienteActivo
                .get(cbxProductosPendientesClientesActivos.getSelectedIndex()));
            if (producto instanceof Cuentas cuenta) {
                Object[] atributos = {clienteActivoSeleccionado.getNombre(),cuenta.getNumeroCuenta(), cuenta.getTipoDeCuenta()};
                txaClientesActivos.setText(String.format("Nombre: %s\nNumero de cuenta: %s\nTipo de cuenta: %s", atributos));
            }
            else if(producto instanceof Creditos credito){
                Object[] atributos = {clienteActivoSeleccionado.getNombre(),credito.getMonto()};
                txaClientesActivos.setText(String.format("Nombre: %s\nMonto solicitado: %s", atributos));
            }
            else if(producto instanceof TarjetaDeCredito tdc) {
                Object[] atributos = {clienteActivoSeleccionado.getNombre(),tdc.getNumeroDeTarjeta(), tdc.getMontoTotal()};
                txaClientesActivos.setText(String.format("Nombre: %s\nNumero de tarjeta: %s\nMonto solicitado: %s", atributos));
            }
            else if(producto instanceof Cdt cdt) {
                Object[] atributos = {clienteActivoSeleccionado.getNombre(),cdt.getMontoDepositado(), cdt.getPlazo(), cdt.getTasaDeInteres()};
                txaClientesActivos.setText(String.format("Nombre: %s\nMonto depositado: %s\nPlazo: %s\nTasa de interés: %s", atributos));
            }
        }
        
    }

    private void jLabel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseEntered
        jLabel3.setForeground(Color.red);
    }//GEN-LAST:event_jLabel3MouseEntered

    private void jLabel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseExited
        jLabel3.setForeground(Color.black);
    }//GEN-LAST:event_jLabel3MouseExited
    
    private void buscarIndicesClientesPendientes() {
        indicesClientesPendientes = new ArrayList();
        for (int i = 0; i<BaseDeDatos.sistema.cantClientes(); i++) {
            if(BaseDeDatos.sistema.getCliente(i).getEstado().equals("Pendiente"))
            indicesClientesPendientes.add(i);
        }
    }
    private void buscarIndicesClientesActivos() {
        indicesClientesActivos = new ArrayList();
        for (int i = 0; i<BaseDeDatos.sistema.cantClientes(); i++) {
            if(BaseDeDatos.sistema.getCliente(i).getEstado().equals("Activo"))
            indicesClientesActivos.add(i);
        }
    }
    
    private void llenarComboClientesPendientes() {
        cbxClientesPendientes.removeAllItems();
        mdlClientesPendientes.removeAllElements();
        buscarIndicesClientesPendientes();
        for (Integer i : indicesClientesPendientes) {
            mdlClientesPendientes.addElement(BaseDeDatos.sistema.getCliente(i).getNombre());
        }
        cbxClientesPendientes.setModel(mdlClientesPendientes);
        cbxClientesPendientes.setSelectedIndex(-1);
    }
    
    private void llenarComboClientesActivos() {
        cbxClientesActivos.removeAllItems();
        mdlClientesActivos.removeAllElements();
        buscarIndicesClientesActivos();
        for (Integer i : indicesClientesActivos) {
            mdlClientesActivos.addElement(BaseDeDatos.sistema.getCliente(i).getNombre());
        }
        cbxClientesActivos.setModel(mdlClientesActivos);
        cbxClientesActivos.setSelectedIndex(-1);
    }
    
    private void llenarTextArea() {
        if(cbxClientesPendientes.getSelectedIndex()!=-1){
        clientePendienteSeleccionado = BaseDeDatos.sistema.getCliente(indicesClientesPendientes.get(cbxClientesPendientes.getSelectedIndex()));
        String[] atributos = {clientePendienteSeleccionado.getNombre(), clientePendienteSeleccionado.getFechaDeNacimiento().toString(), 
            clientePendienteSeleccionado.getNumeroDeDocumento(), clientePendienteSeleccionado.getSexo(), 
            clientePendienteSeleccionado.getCorreoElectronico(), clientePendienteSeleccionado.getNumeroTelefono(), 
            BaseDeDatos.buscarCuentaPendientePorID(clientePendienteSeleccionado.getID()).getTipoDeCuenta()};
        String datosCliente = String.format("""                                            
                                      Nombre: %s
                                      Fecha de Nacimiento: %s
                                      N\u00famero de documento: %s
                                      Sexo: %s
                                      Correo electr\u00f3nico: %s
                                      N\u00famero de tel\u00e9fono: %s
                                      Tipo de cuenta: %s""", (Object[]) atributos);
        txaClientesPendientes.setText(datosCliente);            
        }

    }
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("FlatLaf Dark".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PanelEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PanelEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PanelEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PanelEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PanelEmpleados().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAprobarClientesActivos;
    private javax.swing.JButton btnAprobarClientesPendientes;
    private javax.swing.JButton btnRechazarClientesActivos;
    private javax.swing.JButton btnRechazarClientesPendientes;
    private javax.swing.JComboBox<String> cbxClientesActivos;
    private javax.swing.JComboBox<String> cbxClientesPendientes;
    private javax.swing.JComboBox<String> cbxProductosPendientesClientesActivos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea txaClientesActivos;
    private javax.swing.JTextArea txaClientesPendientes;
    // End of variables declaration//GEN-END:variables
}
